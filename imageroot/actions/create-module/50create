#!/bin/bash

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

set -e

# Redirect any output to the journal (stderr)
exec 1>&2

CLUSTER_NETWORK=$(REDIS_USER=default redis-exec GET cluster/network | sed 's!None!0.0.0.0/0!')

#
# Configure HTTPS access to the API server with the auto-generated certificate, under the /cluster-admin
# URL path prefix. The header "X-Forwarded-Prefix" is added to the forwarded request
#
redis-exec <<EOF
SETNX "${AGENT_ID}/kv" ""
SET "${AGENT_ID}/kv/http/routers/ApiServerHttps/entryPoints/0" "https"
SET "${AGENT_ID}/kv/http/routers/ApiServerHttps/rule" "Path(\`/cluster-admin\`) || PathPrefix(\`/cluster-admin/\`)"
SET "${AGENT_ID}/kv/http/routers/ApiServerHttps/priority" "1"
SET "${AGENT_ID}/kv/http/routers/ApiServerHttps/service" "ApiServerSvc"
SET "${AGENT_ID}/kv/http/routers/ApiServerHttps/tls" "true"
SET "${AGENT_ID}/kv/http/routers/ApiServerHttps/middlewares/0" "ApiServerMw2"
SET "${AGENT_ID}/kv/http/routers/ApiServerHttps/middlewares/1" "ApiServerMw0"
SET "${AGENT_ID}/kv/http/routers/ApiServerHttp/entryPoints/0" "http"
SET "${AGENT_ID}/kv/http/routers/ApiServerHttp/rule" "Path(\`/cluster-admin\`) || PathPrefix(\`/cluster-admin/\`)"
SET "${AGENT_ID}/kv/http/routers/ApiServerHttp/service" "ApiServerSvc"
SET "${AGENT_ID}/kv/http/routers/ApiServerHttp/middlewares/0" "ApiServerMw2"
SET "${AGENT_ID}/kv/http/routers/ApiServerHttp/middlewares/1" "ApiServerMw0"
SET "${AGENT_ID}/kv/http/routers/ApiServerHttp/middlewares/2" "ApiServerMw1"
SET "${AGENT_ID}/kv/http/services/ApiServerSvc/loadBalancer/servers/0/url" "http://127.0.0.1:8080"
SET "${AGENT_ID}/kv/http/middlewares/ApiServerMw0/stripPrefix/forceSlash" "false"
SET "${AGENT_ID}/kv/http/middlewares/ApiServerMw0/stripPrefix/prefixes/0" "/cluster-admin"
SET "${AGENT_ID}/kv/http/middlewares/ApiServerMw1/ipWhiteList/sourceRange/0" "127.0.0.1"
SET "${AGENT_ID}/kv/http/middlewares/ApiServerMw1/ipWhiteList/sourceRange/1" "${CLUSTER_NETWORK}"
SET "${AGENT_ID}/kv/http/middlewares/ApiServerMw2/redirectRegex/regex" "^.*/cluster-admin$"
SET "${AGENT_ID}/kv/http/middlewares/ApiServerMw2/redirectRegex/replacement" "/cluster-admin/"
EOF

#
# Prepare middleware for HTTP to HTTPS redirect
#
redis-exec <<EOF
SET "${AGENT_ID}/kv/http/middlewares/http2https-redirectscheme/redirectScheme/permanent" "true"
SET "${AGENT_ID}/kv/http/middlewares/http2https-redirectscheme/redirectScheme/scheme" "https"
EOF

#
# Configure default self-signed certificate
#
redis-exec <<EOF
SET "${AGENT_ID}/kv/tls/stores/default/defaultCertificate/certFile" "/etc/traefik/selfsigned.crt"
SET "${AGENT_ID}/kv/tls/stores/default/defaultCertificate/keyFile" "/etc/traefik/selfsigned.key"
EOF

#
# Setup APIs endpoint
#
API_PATH=$(uuidgen)
cat >&${AGENT_COMFD} <<EOF
set-env API_PATH ${API_PATH}
dump-env
EOF

redis-exec <<EOF
SET "${AGENT_ID}/kv/http/routers/ApisEndpointHttp/entryPoints/0" "http"
SET "${AGENT_ID}/kv/http/routers/ApisEndpointHttp/rule" "PathPrefix(\`/${API_PATH}/api\`)"
SET "${AGENT_ID}/kv/http/routers/ApisEndpointHttp/service" "api@internal"
SET "${AGENT_ID}/kv/http/routers/ApisEndpointHttp/middlewares/0" "ApisEndpointMw0"
SET "${AGENT_ID}/kv/http/routers/ApisEndpointHttp/middlewares/1" "ApisEndpointMw1"
SET "${AGENT_ID}/kv/http/routers/ApisEndpointHttp/priority" "1"
SET "${AGENT_ID}/kv/http/middlewares/ApisEndpointMw0/ipWhiteList/sourceRange/0" "127.0.0.1"
SET "${AGENT_ID}/kv/http/middlewares/ApisEndpointMw1/stripPrefix/prefixes/0" "/${API_PATH}"
EOF

# Enable and start the services
systemctl --user enable --now traefik.service
