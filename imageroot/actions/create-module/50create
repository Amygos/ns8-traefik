#!/bin/bash

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

set -e

# Redirect any output to the journal (stderr)
exec 1>&2

#
# Create file provider configurations directory
#
mkdir configs


#
# Configure HTTPS access to the API server with the auto-generated certificate, under the /cluster-admin
# URL path prefix. The header "X-Forwarded-Prefix" is added to the forwarded request
#
cat <<EOF > configs/_api_server.yml
http:
  middlewares:
    ApiServer-stripprefix:
      stripPrefix:
        forceSlash: 'false'
        prefixes:
        - /cluster-admin
    ApiServerMw2:
      redirectRegex:
        regex: ^.*/cluster-admin$
        replacement: /cluster-admin/
  routers:
    ApiServer-http:
      entrypoints:
      - http
      middlewares:
      - http2https-redirectscheme
      rule: Path(\`/cluster-admin\`) || PathPrefix(\`/cluster-admin/\`)
      service: ApiServer
    ApiServer-https:
      entrypoints:
      - https
      middlewares:
      - ApiServerMw2
      - ApiServer-stripprefix
      priority: '1'
      rule: Path(\`/cluster-admin\`) || PathPrefix(\`/cluster-admin/\`)
      service: ApiServer
      tls: {}
  services:
    ApiServer:
      loadBalancer:
        servers:
        - url: http://127.0.0.1:9311
EOF

#
# Prepare middleware for HTTP to HTTPS redirect
#
cat <<EOF > configs/_http2https.yml
http:
  middlewares:
    http2https-redirectscheme:
      redirectScheme:
        permanent: true
        scheme: https
EOF

#
# Configure default self-signed certificate
#
cat <<EOF > configs/_default_cert.yml
tls:
  stores:
    default:
      defaultCertificate:
        certFile: /etc/traefik/selfsigned.crt
        keyFile: /etc/traefik/selfsigned.key
EOF

#
# Setup APIs endpoint
#
cat <<EOF > configs/_api.yml

http:
  middlewares:
    ApisEndpointMw0:
      ipWhiteList:
        sourceRange:
        - 127.0.0.1
    ApisEndpointMw1:
      stripPrefix:
        prefixes:
        - /${API_PATH}
  routers:
    ApisEndpointHttp:
      entrypoints:
      - http
      middlewares:
      - ApisEndpointMw1
      - ApisEndpointMw0
      priority: '1'
      rule: PathPrefix(\`/${API_PATH}/api\`)
      service: api@internal
EOF

# Create uploaded certificates folder
mkdir custom_certificates

# Enable and start the services
systemctl --user enable --now traefik.service
