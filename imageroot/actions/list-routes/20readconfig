#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import json
import os
import agent
import sys
import urllib.request
from get_route import get_route


api_path = os.environ["API_PATH"]

data = json.load(sys.stdin)

# Get the list of routers keys
try:
    with urllib.request.urlopen(f'http://127.0.0.1/{api_path}/api/http/routers') as res:
        traefik_routes = json.load(res)
except urllib.error.URLError as e:
    raise Exception(f'Error reaching traefik daemon: {e.reason}')

# Gernerate the list of routes
routes = [ route['name'].removesuffix('-https@file') for route in traefik_routes if route['name'].endswith('-https@file') ]

# Don't list custom `/cluster-admin` route
routes = list(filter(lambda route: route != "ApiServer", routes))

if data != None and data.get('expand_list'):
    routes = [ get_route({'instance': route}) for route in routes ]

json.dump(routes, fp=sys.stdout)
