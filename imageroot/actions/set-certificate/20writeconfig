#!/usr/bin/env python3

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

#
# Request a let's encrypt certificate
# Input example:
#  {"fqdn": "example.com"}
#

import json
import sys
import os
import uuid
import yaml

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

agent_id = os.getenv("AGENT_ID", "")
if not agent_id:
    raise Exception("AGENT_ID not found inside the environemnt")

# Setup HTTP ans HTTPS routers
path = uuid.uuid4()
router = {
        'entrypoints':  "https",
        'service': "ping@internal",
        'rule' :  f'Host(`{data["fqdn"]}`) && Path(`/{path}`)',
        'priority': '1',
        'tls': { 'domains': [{'main': data["fqdn"]}], 'certresolver': "acmeServer"}
        }

# Write configuration file
config = {"http": {"routers": {f'certificate-{data["fqdn"]}': router}}}
with open(f'configs/certificate-{data["fqdn"]}.yml', 'w') as fp:
    fp.write(yaml.safe_dump(config, default_flow_style=False, sort_keys=False, allow_unicode=True))
