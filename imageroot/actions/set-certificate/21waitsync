#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import time
import agent
from get_certificate import get_certificate

data = json.load(sys.stdin)
retry = 0
certificate = {}

sync_timeout = data['sync_timeout'] if data.get('sync_timeout') is not None else 120

while get_certificate(data).get('fqdn') != data['fqdn'] and retry <= 10:
    retry += 1
    time.sleep(1)

certificate['obtained'] = get_certificate(data).get('obtained')

if certificate['obtained'] is False and data.get('sync') is not None and data['sync'] is True:
    retry = 0
    while certificate['obtained'] != True and retry < sync_timeout:
      agent.set_progress(round((retry*100)/sync_timeout))
      certificate['obtained'] = get_certificate(data).get('obtained')
      retry += 1
      time.sleep(1)

json.dump(certificate, fp=sys.stdout)

if data.get('sync') is not None and certificate['obtained'] is False:
    exit(2)
