#!/usr/bin/env sh

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

set -e

CERT_FILE=uploaded_cert
KEY_FILE=uploaded_key
VALID_KEY=0
TYPE_KEY=""

del_certs() {
    rm -f $KEY_FILE $CERT_FILE
}

# checking if key is valid
if openssl rsa -check -in $KEY_FILE >/dev/null 2>&1; then
    VALID_KEY=1
    TYPE_KEY="rsa"
elif openssl dsa -check -in $KEY_FILE >/dev/null 2>&1; then
    VALID_KEY=1
    TYPE_KEY="dsa"
elif openssl ec -check -in $KEY_FILE >/dev/null 2>&1; then
    VALID_KEY=1
    TYPE_KEY="ec"
fi

if [ $VALID_KEY -eq 0 ]; then
    echo "Key validation failed."
    del_certs
    exit 2
fi

# check if certificate is properly pam formatted
if ! openssl x509 -text -noout -in $CERT_FILE >/dev/null 2>&1; then
    echo "Certificate not well formatted."
    del_certs
    exit 4
fi

# check if cert is provided by key (we compare md5 of public keys)
cert_public_key="$(openssl x509 -noout -pubkey -in  $CERT_FILE | openssl md5)"
key_public_key="$(openssl  pkey -pubout -in $KEY_FILE | openssl md5)"


if [ "$cert_public_key" != "$key_public_key" ]; then
    echo "Key didn't generate certificate."
    del_certs
    exit 3
fi
